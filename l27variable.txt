=>VARIABLES


=>@@ - System Variable
NOTE:: @@ is used for system variables prefix. Global value of the system variable.

User Defined Variable
NOTE:: while @ is used for user defind variable;

What is a VARIABLE
*value assign
*value can change or overwrite

Use for VARIABLE
counter in looping
save value
use in conditional logic


=>Local Variable

______________________________________________________

SHOW VARIABLES;

=>@ - USER DEFINED VARIABLES

Method 1 ( Using SELECT)

SELECT @myfirstvar ='Hello Myanmar';

SELECT @myfirstvar;

SELECT @myfirstvar := 'Save Myanmar';

SELECT @myfirstvar;


*Method 2 ( Using SET )

SET @mysecondvar = 'Data Land';

SELECT @mysecondvar;

SET @mysecondvar = 'Tin Htut Aung';

SELECT @mysecondvar;

SELECT @num1 := 10;
SELECT @num2 := 20;
SELECT @num2;
SELECT @num2;
SELECT @num1+@num2;

SELECT @num3 := 10;
SELECT @num4 := 20;
SELECT @num3;
SELECT @num4;
SELECT @num3+@num4;

SELECT @num3 := '30';
SELECT @num4 := '40';
SELECT @num3;
SELECT @num4;
SELECT @num3+@num4;

SELECT @num1,@num2,@num3,@num4;

SELECT @num1 AS numberone,@num2 AS numbertwo,
SELECT @num3 AS numberthree,@num4 AS numberfour;
SELECT @num1 AS numberone,@num2 AS numbertwo,@num3+@num4;
SELECT @num1 AS numberone,@num2 AS numbertwo,@num3+@num4;
SELECT @num1 AS numberone,@num2 AS numbertwo,@num5 := @num3+@num4;
SELECT @num1 AS numberone,@num2 AS numbertwo,@num5 := @num3+@num4 AS number5;
SELECT @num5;

SELECT * FROM employees;

SELECT name,age,salary,city FROM employees
WHERE age > 20;

SELECT @num2 := 20;

SELECT name,age,salary,city FROM employees
WHERE age > @num2;


SET @90k = 90000;

SELECT name,age,salary,city FROM employees
WHERE salary > @90k;

______________________________________________________

=>WARNING

*Show Warnings Count
SHOW COUNT(*) WARNINGS;
SELECT @@warning_count;

*Show Warnings;
SHOW WARNINGS;
SHOW WARNINGS LIMIT 3;
SHOW WARNINGS\G;
SHOW WARNINGS \G;

Note: \G modifier (ego (\G) Send command to mysql server, display result vertically.). mysql> help;
SELECT * FROM tablename\G;
SELECT * FROM tablename \G;

Note: \W modifier (warnings (\W) Show warnings after every statement.). mysql > help;
Note: \W modifier (nowarnings (\W) Don't show warnings after every statement.). mysql > help;

Eg. SELECT 1/0;

=>ERROR
*Show Errors Count
SHOW COUNT(*) ERRORS:
SELECT @@error_count;

*Show Errors
SHOW ERRORS:
SHOW ERRRORS\G;

Eg. DROP TABLE abc; SELECT myfun();

=>Change Error Count Setting;
SHOW VARIABLES LIKE 'max_error_count';
SET max_error_count=1024;

______________________________________
help;

=>Important SELECT Queries

=Check User
status;
SELECT USER();
SELECT USER() AS 'ko ko';

_______________________________________

=>Get Mysql timezone

SHOW VARIABLES LIKE "%time_zone%";
SELECT @@time_zone;
SELECT @@global.time_zone,@@session.time_zone;

=>Change Mysql timezone
SET time_zone = "+07:00";
SET GLOBAL time_zone = "+07:00";
SET @@global.time_zone = "+06:30";

_______________________________________

=>Local Variable

DELIMITER //

	CREATE PROCEDURE procname_proc()
	BEGIN

		DECLARE x INT;
		DECLARE y INT;
		DECLARE z INT;

		SET x := 100;
		SET y := 200;
		SET z = x + y;

		SELECT x,y,z;


	END; //

DELIMITER ;

CALL procname_proc();


SHOW PROCEDURE STATUS WHERE DB = "wdf6880";


//18IS